import { useEffect, useState } from "react";
import Head from "next/head";

// Components
import Layout from "../components/layout";
import SectionTitle from "../components/SectionTitle";
import ContentGrid from "../components/ContentGrid";
import TicketCard from "../components/ticket/TicketCard";
import ContentList from "../components/ContentList";
import ProjectCard from "../components/project/ProjectCard";
import ErrorBlock from "../components/shared/ErrorBlock";
import LoadingBlock from "../components/shared/LoadingBlock";

// Util
import useGetNotVisitedTickets from "../hooks/useGetNotVisitedTickets";
import useGetPinnedProjects from "../hooks/useGetPinnedProjects";

export default function Dashboard() {
  const {
    tickets,
    loading: ticketsLoading,
    error: ticketsError,
  } = useGetNotVisitedTickets();
  const { pinnedProjects, pinnedProjectsLoading, pinnedProjectsError } =
    useGetPinnedProjects();

  return (
    <>
      <Head>
        <title>Issue Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <SectionTitle title="New Tickets" />
        {!ticketsLoading && tickets.length > 0 ? (
          <ContentGrid>
            {tickets.map((ticket) => {
              return (
                <TicketCard
                  key={ticket.id}
                  id={ticket.id}
                  title={ticket.title}
                  description={ticket.description}
                  priority={ticket.priority}
                  assignedBy={ticket.author.displayName}
                />
              );
            })}
          </ContentGrid>
        ) : (
          <ErrorBlock message={ticketsError || "Cant Find Tickets"} />
        )}

        <div className="mt-8">
          <SectionTitle title="Pinned Projects" />
        </div>

        <div className=" px-3">
          {!pinnedProjectsLoading && pinnedProjects.length > 0 ? (
            <ContentList>
              {pinnedProjects.map((project) => {
                return (
                  <ProjectCard
                    key={project.id}
                    id={project.id}
                    title={project.title}
                    img={project.icon}
                    description={project.description}
                    manager={project.manager.id}
                    state={project.state}
                  />
                );
              })}
            </ContentList>
          ) : (
            <ErrorBlock message={pinnedProjectsError} />
          )}
        </div>
      </Layout>
    </>
  );
}
